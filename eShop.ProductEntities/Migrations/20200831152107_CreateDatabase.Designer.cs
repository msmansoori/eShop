// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eShop.ProductEntities.Context;

namespace eShop.ProductEntities.Migrations
{
    [DbContext(typeof(ProductContext))]
    [Migration("20200831152107_CreateDatabase")]
    partial class CreateDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("eShop.ProductEntities.Entities.Brand", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<long?>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ExternalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Active = true,
                            CreatedById = 2L,
                            CreatedOn = new DateTime(2020, 8, 31, 15, 21, 6, 952, DateTimeKind.Utc).AddTicks(1574),
                            ExternalId = new Guid("54e6e514-89c5-4839-9cc3-50c79e43882a"),
                            Name = "SKMEIMore Men Watches from SKMEI"
                        });
                });

            modelBuilder.Entity("eShop.ProductEntities.Entities.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<long?>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ExternalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ParentId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Active = true,
                            CreatedById = 1L,
                            CreatedOn = new DateTime(2020, 8, 31, 15, 21, 6, 952, DateTimeKind.Utc).AddTicks(908),
                            ExternalId = new Guid("fba63609-c392-4d74-8738-3466399853ef"),
                            Name = "Women",
                            ParentId = 0L
                        },
                        new
                        {
                            Id = 2L,
                            Active = true,
                            CreatedById = 1L,
                            CreatedOn = new DateTime(2020, 8, 31, 15, 21, 6, 952, DateTimeKind.Utc).AddTicks(926),
                            ExternalId = new Guid("70a05440-2d84-4b26-9976-af98e8478725"),
                            Name = "Men",
                            ParentId = 0L
                        },
                        new
                        {
                            Id = 3L,
                            Active = true,
                            CreatedById = 1L,
                            CreatedOn = new DateTime(2020, 8, 31, 15, 21, 6, 952, DateTimeKind.Utc).AddTicks(928),
                            ExternalId = new Guid("42a80e59-0f90-4a3d-b0c3-551342c8fa87"),
                            Name = "Kid",
                            ParentId = 0L
                        },
                        new
                        {
                            Id = 4L,
                            Active = true,
                            CreatedById = 1L,
                            CreatedOn = new DateTime(2020, 8, 31, 15, 21, 6, 952, DateTimeKind.Utc).AddTicks(930),
                            ExternalId = new Guid("b4b2d122-743e-47ef-bf77-322b3a7f720e"),
                            Name = "Accessories",
                            ParentId = 0L
                        },
                        new
                        {
                            Id = 5L,
                            Active = true,
                            CreatedById = 1L,
                            CreatedOn = new DateTime(2020, 8, 31, 15, 21, 6, 952, DateTimeKind.Utc).AddTicks(947),
                            ExternalId = new Guid("b5b8e605-8338-47d6-92b5-bb0082519741"),
                            Name = "Cosmetic",
                            ParentId = 0L
                        });
                });

            modelBuilder.Entity("eShop.ProductEntities.Entities.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("AvailableStock")
                        .HasColumnType("int");

                    b.Property<long>("BrandId")
                        .HasColumnType("bigint");

                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<string>("Colors")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<decimal>("DiscountPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ExternalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Promotion")
                        .HasColumnType("int");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sizes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specification")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Active = true,
                            AvailableStock = 10,
                            BrandId = 1L,
                            CategoryId = 1L,
                            Colors = "1;2;3",
                            CreatedById = 2L,
                            CreatedOn = new DateTime(2020, 8, 31, 15, 21, 6, 952, DateTimeKind.Utc).AddTicks(2501),
                            Description = @"Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut loret fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt loret. Neque porro lorem quisquam est, qui dolorem ipsum quia dolor si.Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut loret fugit, sed quia ipsu consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Nulla consequat massa quis enim.  Lorem ipsum dolor sit amet, consectetuer adipiscing elit.Aenean commodo ligula eget dolor.Aenean massa.Cum sociis natoque penatibus et magnis dis parturient montes, 
 nascetur ridiculus mus.Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem",
                            Discount = 10.0,
                            DiscountPrice = 50.05m,
                            ExternalId = new Guid("e3647825-b793-404f-aa6a-992d32cda0cb"),
                            Name = "ESSENTIAL STRUCTURED BLAZER",
                            Price = 500.5m,
                            Promotion = 1,
                            ShortDescription = "Nemo enim ipsam voluptatem quia aspernatur aut odit aut loret fugit, sed quia consequuntur magni lores eos qui ratione voluptatem sequi nesciunt.",
                            Sizes = "1;2;3",
                            Specification = @"Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut loret fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt loret. Neque porro lorem quisquam est, qui dolorem ipsum quia dolor si. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut loret fugit, sed quia ipsu consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Nulla consequat massa quis enim. 
 Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem."
                        });
                });

            modelBuilder.Entity("eShop.ProductEntities.Entities.UploadedFile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<long?>("CreatedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Entity")
                        .HasColumnType("int");

                    b.Property<long>("EntityId")
                        .HasColumnType("bigint");

                    b.Property<Guid>("ExternalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ModifiedById")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.ToTable("UploadedFiles");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Active = true,
                            CreatedById = 1L,
                            CreatedOn = new DateTime(2020, 8, 31, 15, 21, 6, 952, DateTimeKind.Utc).AddTicks(8855),
                            Entity = 1,
                            EntityId = 1L,
                            ExternalId = new Guid("41e4863e-dfca-4683-a394-bc2cb43d2d0e"),
                            FilePath = "/img/product/details/product-1.jpg",
                            Name = "ESSENTIAL STRUCTURED BLAZER 1"
                        },
                        new
                        {
                            Id = 2L,
                            Active = true,
                            CreatedById = 1L,
                            CreatedOn = new DateTime(2020, 8, 31, 15, 21, 6, 952, DateTimeKind.Utc).AddTicks(8867),
                            Entity = 1,
                            EntityId = 1L,
                            ExternalId = new Guid("3d665eb9-aee2-485a-b5d4-6371848ee41e"),
                            FilePath = "/img/product/details/product-2.jpg",
                            Name = "ESSENTIAL STRUCTURED BLAZER 2"
                        },
                        new
                        {
                            Id = 3L,
                            Active = true,
                            CreatedById = 1L,
                            CreatedOn = new DateTime(2020, 8, 31, 15, 21, 6, 952, DateTimeKind.Utc).AddTicks(8870),
                            Entity = 1,
                            EntityId = 1L,
                            ExternalId = new Guid("ef63f815-8eab-4a6b-b3ab-7227798a6ecf"),
                            FilePath = "/img/product/details/product-3.jpg",
                            Name = "ESSENTIAL STRUCTURED BLAZER 3"
                        },
                        new
                        {
                            Id = 4L,
                            Active = true,
                            CreatedById = 1L,
                            CreatedOn = new DateTime(2020, 8, 31, 15, 21, 6, 952, DateTimeKind.Utc).AddTicks(8871),
                            Entity = 1,
                            EntityId = 1L,
                            ExternalId = new Guid("d8ee576a-7e27-4771-8478-4ab394cd2576"),
                            FilePath = "/img/product/details/product-4.jpg",
                            Name = "ESSENTIAL STRUCTURED BLAZER 4"
                        });
                });

            modelBuilder.Entity("eShop.ProductEntities.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ExternalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InternalReference")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Active = true,
                            CreatedOn = new DateTime(2020, 8, 31, 15, 21, 6, 950, DateTimeKind.Utc).AddTicks(6099),
                            ExternalId = new Guid("84baf1d4-f821-4d1d-9632-5b2248d8bd29"),
                            InternalReference = new Guid("ccf5361b-74a9-4b75-8211-37b26e2d1bc0"),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2L,
                            Active = true,
                            CreatedOn = new DateTime(2020, 8, 31, 15, 21, 6, 950, DateTimeKind.Utc).AddTicks(6863),
                            ExternalId = new Guid("02a5bfae-0899-4016-9448-9a5913ac2474"),
                            InternalReference = new Guid("d25f7d72-e475-4d6f-8ca7-aaf189d322c4"),
                            Name = "Retailer"
                        });
                });

            modelBuilder.Entity("eShop.ProductEntities.Entities.Brand", b =>
                {
                    b.HasOne("eShop.ProductEntities.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("eShop.ProductEntities.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");
                });

            modelBuilder.Entity("eShop.ProductEntities.Entities.Category", b =>
                {
                    b.HasOne("eShop.ProductEntities.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("eShop.ProductEntities.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");
                });

            modelBuilder.Entity("eShop.ProductEntities.Entities.Product", b =>
                {
                    b.HasOne("eShop.ProductEntities.Entities.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eShop.ProductEntities.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eShop.ProductEntities.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("eShop.ProductEntities.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");
                });

            modelBuilder.Entity("eShop.ProductEntities.Entities.UploadedFile", b =>
                {
                    b.HasOne("eShop.ProductEntities.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.HasOne("eShop.ProductEntities.Entities.User", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById");
                });
#pragma warning restore 612, 618
        }
    }
}
